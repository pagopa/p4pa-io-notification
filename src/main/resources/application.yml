spring:
  application:
    name: ${artifactId}
    version: ${version}
  jmx.enabled: true
  data:
    mongodb:
      uri: \${MONGODB_URI:mongodb://localhost:27017}
      database: \${MONGODB_DBNAME:payhub}
      # custom configured properties
      config:
        connectionPool:
          maxSize: \${MONGODB_CONNECTIONPOOL_MAX_SIZE:100}
          minSize: \${MONGODB_CONNECTIONPOOL_MIN_SIZE:0}
          maxWaitTimeMS: \${MONGODB_CONNECTIONPOOL_MAX_WAIT_MS:120000}
          maxConnectionLifeTimeMS: \${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_LIFE_MS:0}
          maxConnectionIdleTimeMS: \${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_IDLE_MS:120000}
          maxConnecting: \${MONGODB_CONNECTIONPOOL_MAX_CONNECTING:2}
  cloud:
    function:
      definition: notificationQueue
    stream:
      binders:
        kafka-notification:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder:
              brokers: \${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
              configuration:
                sasl.jaas.config: \${KAFKA_OUTCOME_OUT_SASL_JAAS_CONFIG:}
      bindings:
        notificationQueue-out-0:
          binder: kafka-notification
          content-type: \${KAFKA_CONTENT_TYPE:application/json}
          destination: \${KAFKA_TOPIC_NOTIFICATION:}
      kafka:
        binder:
          auto-create-topics: false
          configuration:
            heartbeat.interval.ms: \${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:3000}
            session.timeout.ms: \${KAFKA_CONFIG_SESSION_TIMEOUT_MS:30000}
            request.timeout.ms: \${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
            metadata.max.age.ms: \${KAFKA_CONFIG_METADATA_MAX_AGE:180000}
            sasl.mechanism: \${KAFKA_NOTIFICATION_SASL_MECHANISM:}
            security.protocol: \${KAFKA_NOTIFICATION_SECURITY_PROTOCOL:}
            max.request.size: \${KAFKA_CONFIG_MAX_REQUEST_SIZE:1000000}


rest-client:
  backend-io-manage:
    service:
      base-url: \${IO_MANAGE_BACKEND_SERVICE_BASE_URL:}
      subscriptionKey: \${IO_BACKEND_SERVICE_SUBSCRIPTION_API_KEY:}
      limit:
      offset:

management:
  endpoint:
    health:
      probes.enabled: true
      group:
        readiness.include: "*"
        liveness.include: livenessState,diskSpace,ping
  endpoints:
    jmx:
      exposure.include: "*"
    web:
      exposure.include: info, health