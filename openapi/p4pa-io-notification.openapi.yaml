openapi: 3.0.1
info:
  title: p4pa-io-notification
  description: Api and Models
  version: 0.0.1
servers:
  - url: "http://localhost:8080/notification"
paths:
  /create/service/{enteId}/{tipoDovutoId}:
    post:
      tags:
        - notification
      operationId: createService
      parameters:
        - name: enteId
          in: path
          required: true
          schema:
            type: string
        - name: tipoDovutoId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestDTO'
      responses:
        '201':
          description: Created
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '404':
          description: TipoDovuto or Ente not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'

  /send/message/{enteId}/{tipoDovutoId}:
    post:
      tags:
        - notification
      operationId: sendMessage
      parameters:
        - name: enteId
          in: path
          required: true
          schema:
            type: string
        - name: tipoDovutoId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationDTO'
      responses:
        '200':
          description: OK
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoNotificationErrorDTO'
components:
  schemas:
    ServiceRequestDTO:
      type: object
      required:
        - serviceName
        - description
        - organization
        - OrganizationDTO
        - ServiceMetadataDTO
      properties:
        serviceName:
          type: string
        description:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationDTO'
        requireSecureChannels:
          type: boolean
        authorizedCidrs:
          type: array
          items:
            type: string
        authorizedRecipients:
          type: array
          items:
            type: string
        serviceMetadata:
          $ref: '#/components/schemas/ServiceMetadataDTO'
    OrganizationDTO:
      type: object
      required:
        - organizationName
        - organizationFiscalCode
      properties:
        organizationName:
          type: string
        organizationFiscalCode:
          type: string
        departmentName:
          type: string
    ServiceMetadataDTO:
      type: object
      required:
        - scope
        - topicId
      properties:
        webUrl:
          type: string
        appIos:
          type: string
        appAndroid:
          type: string
        tosUrl:
          type: string
        privacyUrl:
          type: string
        address:
          type: string
        phone:
          type: string
        email:
          type: string
        pec:
          type: string
        cta:
          type: string
        tokenName:
          type: string
        supportUrl:
          type: string
        scope:
          type: string
        topicId:
          type: integer
    NotificationDTO:
      type: object
      required:
        - fiscalCode
      properties:
        fiscalCode:
          type: string
    IoNotificationErrorDTO:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - IO_NOTIFICATION_SERVICE_NOT_FOUND
            - IO_NOTIFICATION_GENERIC_ERROR
            - IO_NOTIFICATION_TOO_MANY_REQUESTS
            - IO_NOTIFICATION_INVALID_REQUEST
        message:
          type: string